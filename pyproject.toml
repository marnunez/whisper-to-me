[project]
name = "whisper-to-me"
version = "0.4.0"
description = "Real-time voice transcription tool that converts speech to text and types it directly into any application"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "marnunez"},
]
license = {text = "MIT"}
keywords = ["speech-to-text", "transcription", "whisper", "voice-to-text", "accessibility"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
]
dependencies = [
    "faster-whisper>=1.1.1",
    "numpy>=2.3.1",
    "pillow>=11.3.0",
    "pycairo>=1.28.0",
    "pygobject>=3.52.3",
    "pynput>=1.8.1",
    "pyobject>=1.3.2",
    "pystray>=0.19.5",
    "pyyaml>=6.0.2",
    "sounddevice>=0.5.2",
    "soundfile>=0.13.1",
    "tomli-w>=1.2.0",
]

[project.scripts]
whisper-to-me = "whisper_to_me.main:main"

[project.urls]
Homepage = "https://github.com/marnunez/whisper-to-me"
Repository = "https://github.com/marnunez/whisper-to-me"
Issues = "https://github.com/marnunez/whisper-to-me/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.4",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--cov=whisper_to_me",
    "--cov-report=term-missing",
    "-v"
]

[tool.coverage.run]
source = ["whisper_to_me"]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort (import sorting)
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
]
ignore = [
    "E501",   # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["whisper_to_me"]
force-single-line = false
combine-as-imports = true
split-on-trailing-comma = true

[tool.hatch.build.targets.wheel]
packages = ["whisper_to_me"]

[tool.hatch.build.targets.wheel.sources]
"assets" = "whisper_to_me/assets"

